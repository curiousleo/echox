"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[590],{4570:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var t=s(4848),n=s(8453);const o={description:"HTTP/2 server push recipe"},i="HTTP/2 Server Push",a={id:"cookbook/http2-server-push",title:"HTTP/2 Server Push",description:"HTTP/2 server push recipe",source:"@site/docs/cookbook/http2-server-push.md",sourceDirName:"cookbook",slug:"/cookbook/http2-server-push",permalink:"/docs/cookbook/http2-server-push",draft:!1,unlisted:!1,editUrl:"https://github.com/labstack/echox/blob/master/website/docs/cookbook/http2-server-push.md",tags:[],version:"current",frontMatter:{description:"HTTP/2 server push recipe"},sidebar:"docsSidebar",previous:{title:"Hello World",permalink:"/docs/cookbook/hello-world"},next:{title:"HTTP/2 Server",permalink:"/docs/cookbook/http2"}},c={},l=[{value:"Send web assets using HTTP/2 server push",id:"send-web-assets-using-http2-server-push",level:2},{value:"Generate a self-signed X.509 TLS certificate",id:"generate-a-self-signed-x509-tls-certificate",level:3},{value:"1) Register a route to serve web assets",id:"1-register-a-route-to-serve-web-assets",level:3},{value:"2) Create a handler to serve index.html and push it&#39;s dependencies",id:"2-create-a-handler-to-serve-indexhtml-and-push-its-dependencies",level:3},{value:"3) Start TLS server using cert.pem and key.pem",id:"3-start-tls-server-using-certpem-and-keypem",level:3},{value:"4) Start the server and browse to https://localhost:1323",id:"4-start-the-server-and-browse-to-httpslocalhost1323",level:3},{value:"Source Code",id:"source-code",level:2}];function h(e){const r={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"http2-server-push",children:"HTTP/2 Server Push"})}),"\n",(0,t.jsx)(r.admonition,{type:"note",children:(0,t.jsx)(r.p,{children:"Requires go1.8+"})}),"\n",(0,t.jsx)(r.h2,{id:"send-web-assets-using-http2-server-push",children:"Send web assets using HTTP/2 server push"}),"\n",(0,t.jsx)(r.h3,{id:"generate-a-self-signed-x509-tls-certificate",children:(0,t.jsx)(r.a,{href:"http2#step-1-generate-a-self-signed-x-509-tls-certificate",children:"Generate a self-signed X.509 TLS certificate"})}),"\n",(0,t.jsx)(r.h3,{id:"1-register-a-route-to-serve-web-assets",children:"1) Register a route to serve web assets"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-go",children:'e.Static("/", "static")\n'})}),"\n",(0,t.jsx)(r.h3,{id:"2-create-a-handler-to-serve-indexhtml-and-push-its-dependencies",children:"2) Create a handler to serve index.html and push it's dependencies"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-go",children:'e.GET("/", func(c echo.Context) (err error) {\n  pusher, ok := c.Response().Writer.(http.Pusher)\n  if ok {\n    if err = pusher.Push("/app.css", nil); err != nil {\n      return\n    }\n    if err = pusher.Push("/app.js", nil); err != nil {\n      return\n    }\n    if err = pusher.Push("/echo.png", nil); err != nil {\n      return\n    }\n  }\n  return c.File("index.html")\n})\n'})}),"\n",(0,t.jsx)(r.admonition,{type:"info",children:(0,t.jsxs)(r.p,{children:["If ",(0,t.jsx)(r.code,{children:"http.Pusher"})," is supported, web assets are pushed; otherwise, client makes separate requests to get them."]})}),"\n",(0,t.jsx)(r.h3,{id:"3-start-tls-server-using-certpem-and-keypem",children:"3) Start TLS server using cert.pem and key.pem"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-go",children:'if err := e.StartTLS(":1323", "cert.pem", "key.pem"); err != http.ErrServerClosed {\n  log.Fatal(err)\n}\n'})}),"\n",(0,t.jsx)(r.p,{children:"or use customized HTTP server with your own TLSConfig"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-go",children:'s := http.Server{\n  Addr:    ":8443",\n  Handler: e, // set Echo as handler\n  TLSConfig: &tls.Config{\n    //Certificates: nil, // <-- s.ListenAndServeTLS will populate this field\n  },\n  //ReadTimeout: 30 * time.Second, // use custom timeouts\n}\nif err := s.ListenAndServeTLS("cert.pem", "key.pem"); err != http.ErrServerClosed {\n  log.Fatal(err)\n}\n'})}),"\n",(0,t.jsxs)(r.h3,{id:"4-start-the-server-and-browse-to-httpslocalhost1323",children:["4) Start the server and browse to ",(0,t.jsx)(r.a,{href:"https://localhost:1323",children:"https://localhost:1323"})]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-sh",children:"Protocol: HTTP/2.0\nHost: localhost:1323\nRemote Address: [::1]:60288\nMethod: GET\nPath: /\n"})}),"\n",(0,t.jsx)(r.h2,{id:"source-code",children:"Source Code"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-html",metastring:"reference",children:"https://github.com/labstack/echox/blob/master/cookbook/http2-server-push/index.html\n"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-go",metastring:"reference",children:"https://github.com/labstack/echox/blob/master/cookbook/http2-server-push/server.go\n"})})]})}function d(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},8453:(e,r,s)=>{s.d(r,{R:()=>i,x:()=>a});var t=s(6540);const n={},o=t.createContext(n);function i(e){const r=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),t.createElement(o.Provider,{value:r},e.children)}}}]);